// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BudgetCalculator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <RemainderCalculations
<<<<<<< HEAD
          dailyAllowance={1613}
=======
          dailyAllowance={1612}
>>>>>>> master
          daysElapsed={1}
          daysRemaining={31}
          intervalStartDate={25}
          totalAllowance={50000}
          totalSpent={0}
          updateAllowance={[Function]}
          updateIntervalStartDate={[Function]}
        />,
        <DayInputsContainer
          amountsSpent={Object {}}
          startNumber={25}
          updateAmountSpent={[Function]}
        />,
      ],
      "forceInset": Object {
        "bottom": "always",
        "top": "always",
      },
      "style": Object {
        "flex": 1,
        "marginHorizontal": "5%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
<<<<<<< HEAD
          "dailyAllowance": 1613,
=======
          "dailyAllowance": 1612,
>>>>>>> master
          "daysElapsed": 1,
          "daysRemaining": 31,
          "intervalStartDate": 25,
          "totalAllowance": 50000,
          "totalSpent": 0,
          "updateAllowance": [Function],
          "updateIntervalStartDate": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "amountsSpent": Object {},
          "startNumber": 25,
          "updateAmountSpent": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <RemainderCalculations
<<<<<<< HEAD
            dailyAllowance={1613}
=======
            dailyAllowance={1612}
>>>>>>> master
            daysElapsed={1}
            daysRemaining={31}
            intervalStartDate={25}
            totalAllowance={50000}
            totalSpent={0}
            updateAllowance={[Function]}
            updateIntervalStartDate={[Function]}
          />,
          <DayInputsContainer
            amountsSpent={Object {}}
            startNumber={25}
            updateAmountSpent={[Function]}
          />,
        ],
        "forceInset": Object {
          "bottom": "always",
          "top": "always",
        },
        "style": Object {
          "flex": 1,
          "marginHorizontal": "5%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "dailyAllowance": 1613,
            "daysElapsed": 1,
            "daysRemaining": 31,
            "intervalStartDate": 25,
            "totalAllowance": 50000,
            "totalSpent": 0,
            "updateAllowance": [Function],
            "updateIntervalStartDate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "amountsSpent": Object {},
            "startNumber": 25,
            "updateAmountSpent": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
